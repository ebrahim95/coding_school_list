{
  "resolvedId": "/home/ebrahim/Desktop/coding_school_list/web_app/src/routes/index.tsx",
  "transforms": [
    {
      "name": "__load__",
      "result": "import { A } from \"solid-start\";\nimport { createSignal, onMount, For, Show } from 'solid-js';\nimport { coding_school } from '../services/utils'\n// import { getSchools } from '../services/service'\nimport {\n  flexRender,\n  getCoreRowModel,\n  ColumnDef,\n  createSolidTable,\n  SortingState,\n  getSortedRowModel,\n  getPaginationRowModel,\n  getFilteredRowModel,\n  sortingFns,\n  ColumnFiltersState\n} from '@tanstack/solid-table'\n\n\nimport {\n  rankItem,\n  compareItems\n} from '@tanstack/match-sorter-utils'\n\n\n\nconst defaultData: coding_school[] = [\n  {\n    name: 'joe',\n    url: 'google..com',\n    courses_offered: \"none coco\",\n    location: \"may\"\n  }, {\n    name: 'joe',\n    url: 'google..com',\n    courses_offered: \"none\",\n    location: \"may\"\n  }, {\n    name: 'joe',\n    url: 'google..com',\n    courses_offered: \"none\",\n    location: \"may\"\n  }, {\n    name: 'joe',\n    url: 'google..com',\n    courses_offered: \"none\",\n    location: \"may\"\n  }, {\n    name: 'joe',\n    url: 'google..com',\n    courses_offered: \"none\",\n    location: \"may\"\n  }, {\n    name: 'joe',\n    url: 'google..com',\n    courses_offered: \"none\",\n    location: \"may\"\n  }, {\n    name: 'joe',\n    url: 'google..com',\n    courses_offered: \"none\",\n    location: \"may\"\n  }, {\n    name: 'joe',\n    url: 'google..com',\n    courses_offered: \"none\",\n    location: \"may\"\n  }, {\n    name: 'joe',\n    url: 'google..com',\n    courses_offered: \"none\",\n    location: \"may\"\n  }, {\n    name: 'joe',\n    url: 'google..com',\n    courses_offered: \"none\",\n    location: \"may\"\n  }, {\n    name: 'joe',\n    url: 'google..com',\n    courses_offered: \"none\",\n    location: \"may\"\n  }, {\n    name: 'joe',\n    url: 'google..com',\n    courses_offered: \"none\",\n    location: \"may\"\n  }, {\n    name: 'joe',\n    url: 'google..com',\n    courses_offered: \"none\",\n    location: \"may\"\n  }, {\n    name: 'joe',\n    url: 'google..com',\n    courses_offered: \"none\",\n    location: \"may\"\n  }, {\n    name: 'joe',\n    url: 'google..com',\n    courses_offered: \"none\",\n    location: \"may\"\n  }, {\n    name: 'joe',\n    url: 'google..com',\n    courses_offered: \"none\",\n    location: \"may\"\n  }, {\n    name: 'joe',\n    url: 'google..com',\n    courses_offered: \"none\",\n    location: \"may\"\n  }, {\n    name: 'joe',\n    url: 'google..com',\n    courses_offered: \"none\",\n    location: \"may\"\n  }, {\n    name: 'joe',\n    url: 'google..com',\n    courses_offered: \"none\",\n    location: \"may\"\n  }, {\n    name: 'joe',\n    url: 'google..com',\n    courses_offered: \"none\",\n    location: \"may\"\n  }, {\n    name: 'joe',\n    url: 'google..com',\n    courses_offered: \"none\",\n    location: \"may\"\n  }, {\n    name: 'joe',\n    url: 'google..com',\n    courses_offered: \"none\",\n    location: \"may\"\n  }, {\n    name: 'joe',\n    url: 'google..com',\n    courses_offered: \"none\",\n    location: \"may\"\n  }, {\n    name: 'joe',\n    url: 'google..com',\n    courses_offered: \"none\",\n    location: \"may\"\n  }, {\n    name: 'joe',\n    url: 'google..com',\n    courses_offered: \"none\",\n    location: \"may\"\n  }, {\n    name: 'joe',\n    url: 'google..com',\n    courses_offered: \"none\",\n    location: \"may\"\n  }, {\n    name: 'joe',\n    url: 'google..com',\n    courses_offered: \"none\",\n    location: \"may\"\n  }, {\n    name: 'joe',\n    url: 'google..com',\n    courses_offered: \"none\",\n    location: \"may\"\n  }, {\n    name: 'joe',\n    url: 'google..com',\n    courses_offered: \"none\",\n    location: \"may\"\n  }, {\n    name: 'joe',\n    url: 'google..com',\n    courses_offered: \"none\",\n    location: \"may\"\n  }, {\n    name: 'joe',\n    url: 'google..com',\n    courses_offered: \"none\",\n    location: \"may\"\n  }, {\n    name: 'joe',\n    url: 'google..com',\n    courses_offered: \"none\",\n    location: \"may\"\n  }, {\n    name: 'joe',\n    url: 'google..com',\n    courses_offered: \"none\",\n    location: \"may\"\n  }, {\n    name: 'joe',\n    url: 'google..com',\n    courses_offered: \"none\",\n    location: \"may\"\n  }, {\n    name: 'joe',\n    url: 'google..com',\n    courses_offered: \"none\",\n    location: \"may\"\n  }, {\n    name: 'joe',\n    url: 'google..com',\n    courses_offered: \"none\",\n    location: \"may\"\n  }, {\n    name: 'joe',\n    url: 'google..com',\n    courses_offered: \"none\",\n    location: \"may\"\n  }, {\n    name: 'joe',\n    url: 'google..com',\n    courses_offered: \"none\",\n    location: \"may\"\n  }, {\n    name: 'joe',\n    url: 'google..com',\n    courses_offered: \"none\",\n    location: \"may\"\n  }, {\n    name: 'joe',\n    url: 'google..com',\n    courses_offered: \"none\",\n    location: \"may\"\n  }, {\n    name: 'joe',\n    url: 'google..com',\n    courses_offered: \"none\",\n    location: \"may\"\n  },\n]\n\n\n//TODO: need to disable sorting for some columns\nconst defaultColumns: ColumnDef<coding_school>[] = [\n  {\n    accessorKey: 'name',\n    cell: info => info.getValue<string>(),\n    header: () => 'Name',\n  },\n  {\n    accessorKey: 'url',\n    header: () => 'Url',\n  },\n  {\n    accessorKey: 'courses_offered',\n    header: () => 'Courses Offered',\n    cell: info => info.getValue<string>().split(\" \").map(word => <span class=\"badge mx-1\">{word}</span>),\n  },\n  {\n    accessorKey: 'location',\n    header: () => 'Location',\n  },\n]\n\nexport default function Home() {\n\n  const [data, setData] = createSignal([] as coding_school[])\n  const [sorting, setSorting] = createSignal<SortingState>([])\n  const [columnFilters, setColumnFilters] = createSignal<ColumnFiltersState>([])\n  const [globalFilter, setGlobalFilter] = createSignal<any>(\"\")\n  // const [data, setData] = createSignal([] as coding_school[])\n\n  // onMount(async () => {\n  //   const raw_data = await getSchools();\n  //   const filter_array = raw_data.map(({ name, url, courses_offered, location }) => {\n  //     return ({\n  //       name,\n  //       url,\n  //       courses_offered,\n  //       location,\n  //     })\n  //   })\n  //   setData(filter_array)\n  //   console.log(filter_array)\n  //\n  // })\n\n  setData(defaultData)\n\n\n  const fuzzyFilter = (row: any, columnId: any, value: any, addMeta: any) => {\n    // Rank the item\n    const itemRank = rankItem(row.getValue(columnId), value)\n\n    // Store the ranking info\n    addMeta(itemRank)\n\n    // Return if the item should be filtered in/out\n    return itemRank.passed\n  }\n\n  const fuzzySort = (rowA: any, rowB: any, columnId: any) => {\n    let dir = 0\n\n    // Only sort by rank if the column has ranking information\n    if (rowA.columnFiltersMeta[columnId]) {\n      dir = compareItems(\n        rowA.columnFiltersMeta[columnId]!,\n        rowB.columnFiltersMeta[columnId]!\n      )\n    }\n\n    // Provide an alphanumeric fallback for when the item ranks are equal\n    return dir === 0 ? sortingFns.alphanumeric(rowA, rowB, columnId) : dir\n\n  }\n\n\n  const table = createSolidTable({\n    get data() {\n      return data()\n    },\n    filterFns: {\n      fuzzy: fuzzyFilter,\n    },\n    state: {\n      get sorting() {\n        return sorting()\n      },\n      get globalFilter() {\n        return globalFilter()\n      }\n    },\n    onSortingChange: setSorting,\n    columns: defaultColumns,\n    getFilteredRowModel: getFilteredRowModel(),\n    globalFilterFn: fuzzyFilter,\n    onColumnFiltersChange: setColumnFilters,\n    onGlobalFilterChange: setGlobalFilter,\n    getCoreRowModel: getCoreRowModel(),\n    getSortedRowModel: getSortedRowModel(),\n    getPaginationRowModel: getPaginationRowModel()\n  })\n\n  return (\n    <main class=\"prose text-center mx-auto text-gray-700 p-4\">\n\n      <h1 class=\"max-6-xs text-6xl font-bold uppercase my-16\">\n        Coding Schools In My City\n      </h1>\n      <div class=\"form-control\">\n        <label class=\"label\">\n          Press <span class=\"kbd ml-1 mr-auto\">Enter</span>\n        </label>\n        <label class=\"input-group\">\n          <span>Search</span>\n          <input\n            type=\"text\"\n            onChange={(e) => setGlobalFilter(String(e.target.value))}\n            class=\"input input-bordered\"\n          />\n        </label>\n      </div>\n      <table>\n        <thead>\n          <For each={table.getHeaderGroups()}>\n            {headerGroup => (\n              <tr>\n                <For each={headerGroup.headers}>\n                  {header => (\n                    <th colSpan={header.colSpan}>\n                      <Show when={!header.isPlaceholder}>\n                        <div\n                          class={\n                            header.column.getCanSort()\n                              ? 'cursor-pointer select-none'\n                              : undefined\n                          }\n                          onClick={header.column.getToggleSortingHandler()}\n                        >\n                          {flexRender(\n                            header.column.columnDef.header,\n                            header.getContext()\n                          )}\n                          {{\n                            asc: ' ðŸ”¼',\n                            desc: ' ðŸ”½',\n                          }[header.column.getIsSorted() as string] ?? null}\n                        </div>\n                      </Show>\n                    </th>\n                  )}\n                </For>\n              </tr>\n            )}\n          </For>\n        </thead>\n        <tbody>\n          <For each={table.getRowModel().rows}>\n            {row => (\n              <tr>\n                <For each={row.getVisibleCells()}>\n                  {cell => (\n                    <td>\n                      {flexRender(\n                        cell.column.columnDef.cell,\n                        cell.getContext()\n                      )}\n                    </td>\n                  )}\n                </For>\n              </tr>\n            )}\n          </For>\n        </tbody>\n      </table>\n      <div class=\"btn-group\">\n        <button\n          class=\"btn btn-primary\"\n          onClick={() => table.previousPage()}\n          disabled={!table.getCanPreviousPage()}\n        >\n          {'<'}\n        </button>\n        <button\n          class=\"btn btn-secondary\"\n          onClick={() => table.nextPage()}\n          disabled={!table.getCanNextPage()}\n        >\n          {'>'}\n        </button>\n      </div>\n      <span>\n        <div>Page</div>\n        <strong>\n          {table.getState().pagination.pageIndex + 1} of{' '}\n          {table.getPageCount()}\n        </strong>\n      </span>\n      <form class=\"flex flex-col justify-center gap-3\">\n        <h2> Fill up form below to add your school </h2>\n        <label class=\"input-group input-group-vertical \">\n          <span>name</span>\n          <input type=\"text\" placeholder=\"My Coding School\" class=\"input input-bordered\" />\n        </label>\n        <label class=\"input-group input-group-vertical\">\n          <span>url</span>\n          <input type=\"text\" placeholder=\"https://www.google.com\" class=\"input input-bordered\" />\n        </label>\n        <label class=\"input-group input-group-vertical\">\n          <span>courses offered</span>\n          <input type=\"text\" placeholder=\"Java, Python, JavaScript\" class=\"input input-bordered\" />\n        </label>\n        <label class=\"input-group input-group-vertical\">\n          <span>location</span>\n          <input type=\"text\" placeholder=\"Austin, TX\" class=\"input input-bordered\" />\n        </label>\n\n        <button class=\"btn\">\n          Submit\n        </button>\n      </form>\n      {/* <p class=\"my-4\"> */}\n      {/*   <span>Home</span> */}\n      {/*   {\" - \"} */}\n      {/*   <A href=\"/about\" class=\"text-sky-600 hover:underline\"> */}\n      {/*     About Page */}\n      {/*   </A>{\" \"} */}\n      {/* </p> */}\n    </main>\n  );\n}\n",
      "start": 1685413275548,
      "end": 1685413275548
    },
    {
      "name": "solid-start-file-system-router",
      "result": "import { template as _$template } from \"solid-js/web\";\nimport { delegateEvents as _$delegateEvents } from \"solid-js/web\";\nimport { setAttribute as _$setAttribute } from \"solid-js/web\";\nimport { className as _$className } from \"solid-js/web\";\nimport { memo as _$memo } from \"solid-js/web\";\nimport { addEventListener as _$addEventListener } from \"solid-js/web\";\nimport { effect as _$effect } from \"solid-js/web\";\nimport { runHydrationEvents as _$runHydrationEvents } from \"solid-js/web\";\nimport { getNextMarker as _$getNextMarker } from \"solid-js/web\";\nimport { createComponent as _$createComponent } from \"solid-js/web\";\nimport { getNextElement as _$getNextElement } from \"solid-js/web\";\nimport { insert as _$insert } from \"solid-js/web\";\nconst _tmpl$ = /*#__PURE__*/_$template(`<span class=\"badge mx-1\">`),\n  _tmpl$2 = /*#__PURE__*/_$template(`<main class=\"prose text-center mx-auto text-gray-700 p-4\"><h1 class=\"max-6-xs text-6xl font-bold uppercase my-16\">Coding Schools In My City</h1><div class=\"form-control\"><label class=\"label\">Press <span class=\"kbd ml-1 mr-auto\">Enter</span></label><label class=\"input-group\"><span>Search</span><input type=\"text\" class=\"input input-bordered\"></label></div><table><thead></thead><tbody></tbody></table><div class=\"btn-group\"><button class=\"btn btn-primary\">&lt;</button><button class=\"btn btn-secondary\">></button></div><span><div>Page</div><strong><!#><!/> of <!#><!/></strong></span><form class=\"flex flex-col justify-center gap-3\"><h2> Fill up form below to add your school </h2><label class=\"input-group input-group-vertical \"><span>name</span><input type=\"text\" placeholder=\"My Coding School\" class=\"input input-bordered\"></label><label class=\"input-group input-group-vertical\"><span>url</span><input type=\"text\" placeholder=\"https://www.google.com\" class=\"input input-bordered\"></label><label class=\"input-group input-group-vertical\"><span>courses offered</span><input type=\"text\" placeholder=\"Java, Python, JavaScript\" class=\"input input-bordered\"></label><label class=\"input-group input-group-vertical\"><span>location</span><input type=\"text\" placeholder=\"Austin, TX\" class=\"input input-bordered\"></label><button class=\"btn\">Submit`),\n  _tmpl$3 = /*#__PURE__*/_$template(`<tr>`),\n  _tmpl$4 = /*#__PURE__*/_$template(`<div><!#><!/><!#><!/>`),\n  _tmpl$5 = /*#__PURE__*/_$template(`<th>`),\n  _tmpl$6 = /*#__PURE__*/_$template(`<td>`);\nimport { createSignal, For, Show } from 'solid-js';\n// import { getSchools } from '../services/service'\nimport { flexRender, getCoreRowModel, createSolidTable, getSortedRowModel, getPaginationRowModel, getFilteredRowModel, sortingFns } from '@tanstack/solid-table';\nimport { rankItem, compareItems } from '@tanstack/match-sorter-utils';\nconst defaultData = [{\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none coco\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}];\n\n//TODO: need to disable sorting for some columns\nconst defaultColumns = [{\n  accessorKey: 'name',\n  cell: info => info.getValue(),\n  header: () => 'Name'\n}, {\n  accessorKey: 'url',\n  header: () => 'Url'\n}, {\n  accessorKey: 'courses_offered',\n  header: () => 'Courses Offered',\n  cell: info => info.getValue().split(\" \").map(word => (() => {\n    const _el$ = _$getNextElement(_tmpl$);\n    _$insert(_el$, word);\n    return _el$;\n  })())\n}, {\n  accessorKey: 'location',\n  header: () => 'Location'\n}];\nexport default function Home() {\n  const [data, setData] = createSignal([]);\n  const [sorting, setSorting] = createSignal([]);\n  const [columnFilters, setColumnFilters] = createSignal([]);\n  const [globalFilter, setGlobalFilter] = createSignal(\"\");\n  // const [data, setData] = createSignal([] as coding_school[])\n\n  // onMount(async () => {\n  //   const raw_data = await getSchools();\n  //   const filter_array = raw_data.map(({ name, url, courses_offered, location }) => {\n  //     return ({\n  //       name,\n  //       url,\n  //       courses_offered,\n  //       location,\n  //     })\n  //   })\n  //   setData(filter_array)\n  //   console.log(filter_array)\n  //\n  // })\n\n  setData(defaultData);\n  const fuzzyFilter = (row, columnId, value, addMeta) => {\n    // Rank the item\n    const itemRank = rankItem(row.getValue(columnId), value);\n\n    // Store the ranking info\n    addMeta(itemRank);\n\n    // Return if the item should be filtered in/out\n    return itemRank.passed;\n  };\n  const fuzzySort = (rowA, rowB, columnId) => {\n    let dir = 0;\n\n    // Only sort by rank if the column has ranking information\n    if (rowA.columnFiltersMeta[columnId]) {\n      dir = compareItems(rowA.columnFiltersMeta[columnId], rowB.columnFiltersMeta[columnId]);\n    }\n\n    // Provide an alphanumeric fallback for when the item ranks are equal\n    return dir === 0 ? sortingFns.alphanumeric(rowA, rowB, columnId) : dir;\n  };\n  const table = createSolidTable({\n    get data() {\n      return data();\n    },\n    filterFns: {\n      fuzzy: fuzzyFilter\n    },\n    state: {\n      get sorting() {\n        return sorting();\n      },\n      get globalFilter() {\n        return globalFilter();\n      }\n    },\n    onSortingChange: setSorting,\n    columns: defaultColumns,\n    getFilteredRowModel: getFilteredRowModel(),\n    globalFilterFn: fuzzyFilter,\n    onColumnFiltersChange: setColumnFilters,\n    onGlobalFilterChange: setGlobalFilter,\n    getCoreRowModel: getCoreRowModel(),\n    getSortedRowModel: getSortedRowModel(),\n    getPaginationRowModel: getPaginationRowModel()\n  });\n  return (() => {\n    const _el$2 = _$getNextElement(_tmpl$2),\n      _el$3 = _el$2.firstChild,\n      _el$4 = _el$3.nextSibling,\n      _el$5 = _el$4.firstChild,\n      _el$6 = _el$5.nextSibling,\n      _el$7 = _el$6.firstChild,\n      _el$8 = _el$7.nextSibling,\n      _el$9 = _el$4.nextSibling,\n      _el$10 = _el$9.firstChild,\n      _el$11 = _el$10.nextSibling,\n      _el$12 = _el$9.nextSibling,\n      _el$13 = _el$12.firstChild,\n      _el$14 = _el$13.nextSibling,\n      _el$15 = _el$12.nextSibling,\n      _el$16 = _el$15.firstChild,\n      _el$17 = _el$16.nextSibling,\n      _el$20 = _el$17.firstChild,\n      [_el$21, _co$] = _$getNextMarker(_el$20.nextSibling),\n      _el$18 = _el$21.nextSibling,\n      _el$22 = _el$18.nextSibling,\n      [_el$23, _co$2] = _$getNextMarker(_el$22.nextSibling);\n    _el$8.addEventListener(\"change\", e => setGlobalFilter(String(e.target.value)));\n    _$insert(_el$10, _$createComponent(For, {\n      get each() {\n        return table.getHeaderGroups();\n      },\n      children: headerGroup => (() => {\n        const _el$24 = _$getNextElement(_tmpl$3);\n        _$insert(_el$24, _$createComponent(For, {\n          get each() {\n            return headerGroup.headers;\n          },\n          children: header => (() => {\n            const _el$25 = _$getNextElement(_tmpl$5);\n            _$insert(_el$25, _$createComponent(Show, {\n              get when() {\n                return !header.isPlaceholder;\n              },\n              get children() {\n                const _el$26 = _$getNextElement(_tmpl$4),\n                  _el$27 = _el$26.firstChild,\n                  [_el$28, _co$3] = _$getNextMarker(_el$27.nextSibling),\n                  _el$29 = _el$28.nextSibling,\n                  [_el$30, _co$4] = _$getNextMarker(_el$29.nextSibling);\n                _$addEventListener(_el$26, \"click\", header.column.getToggleSortingHandler(), true);\n                _$insert(_el$26, () => flexRender(header.column.columnDef.header, header.getContext()), _el$28, _co$3);\n                _$insert(_el$26, () => ({\n                  asc: ' ðŸ”¼',\n                  desc: ' ðŸ”½'\n                })[header.column.getIsSorted()] ?? null, _el$30, _co$4);\n                _$effect(() => _$className(_el$26, header.column.getCanSort() ? 'cursor-pointer select-none' : undefined));\n                _$runHydrationEvents();\n                return _el$26;\n              }\n            }));\n            _$effect(() => _$setAttribute(_el$25, \"colspan\", header.colSpan));\n            return _el$25;\n          })()\n        }));\n        return _el$24;\n      })()\n    }));\n    _$insert(_el$11, _$createComponent(For, {\n      get each() {\n        return table.getRowModel().rows;\n      },\n      children: row => (() => {\n        const _el$31 = _$getNextElement(_tmpl$3);\n        _$insert(_el$31, _$createComponent(For, {\n          get each() {\n            return row.getVisibleCells();\n          },\n          children: cell => (() => {\n            const _el$32 = _$getNextElement(_tmpl$6);\n            _$insert(_el$32, () => flexRender(cell.column.columnDef.cell, cell.getContext()));\n            return _el$32;\n          })()\n        }));\n        return _el$31;\n      })()\n    }));\n    _el$13.$$click = () => table.previousPage();\n    _el$14.$$click = () => table.nextPage();\n    _$insert(_el$17, () => table.getState().pagination.pageIndex + 1, _el$21, _co$);\n    _$insert(_el$17, () => table.getPageCount(), _el$23, _co$2);\n    _$effect(_p$ => {\n      const _v$ = !table.getCanPreviousPage(),\n        _v$2 = !table.getCanNextPage();\n      _v$ !== _p$._v$ && (_el$13.disabled = _p$._v$ = _v$);\n      _v$2 !== _p$._v$2 && (_el$14.disabled = _p$._v$2 = _v$2);\n      return _p$;\n    }, {\n      _v$: undefined,\n      _v$2: undefined\n    });\n    _$runHydrationEvents();\n    return _el$2;\n  })();\n}\n_$delegateEvents([\"click\"]);",
      "start": 1685413275548,
      "end": 1685413275590,
      "order": "pre"
    },
    {
      "name": "solid",
      "result": "import { $$component as _$$component } from \"solid-refresh\";\nimport { $$refresh as _$$refresh } from \"solid-refresh\";\nimport { $$registry as _$$registry } from \"solid-refresh\";\nconst _REGISTRY = _$$registry();\nimport { template as _$template } from \"solid-js/web\";\nimport { delegateEvents as _$delegateEvents } from \"solid-js/web\";\nimport { setAttribute as _$setAttribute } from \"solid-js/web\";\nimport { className as _$className } from \"solid-js/web\";\nimport { addEventListener as _$addEventListener } from \"solid-js/web\";\nimport { effect as _$effect } from \"solid-js/web\";\nimport { runHydrationEvents as _$runHydrationEvents } from \"solid-js/web\";\nimport { getNextMarker as _$getNextMarker } from \"solid-js/web\";\nimport { createComponent as _$createComponent } from \"solid-js/web\";\nimport { getNextElement as _$getNextElement } from \"solid-js/web\";\nimport { insert as _$insert } from \"solid-js/web\";\nconst _tmpl$ = /*#__PURE__*/_$template(`<span class=\"badge mx-1\">`),\n  _tmpl$2 = /*#__PURE__*/_$template(`<main class=\"prose text-center mx-auto text-gray-700 p-4\"><h1 class=\"max-6-xs text-6xl font-bold uppercase my-16\">Coding Schools In My City</h1><div class=\"form-control\"><label class=\"label\">Press <span class=\"kbd ml-1 mr-auto\">Enter</span></label><label class=\"input-group\"><span>Search</span><input type=\"text\" class=\"input input-bordered\"></label></div><table><thead></thead><tbody></tbody></table><div class=\"btn-group\"><button class=\"btn btn-primary\">&lt;</button><button class=\"btn btn-secondary\">></button></div><span><div>Page</div><strong><!#><!/> of <!#><!/></strong></span><form class=\"flex flex-col justify-center gap-3\"><h2> Fill up form below to add your school </h2><label class=\"input-group input-group-vertical \"><span>name</span><input type=\"text\" placeholder=\"My Coding School\" class=\"input input-bordered\"></label><label class=\"input-group input-group-vertical\"><span>url</span><input type=\"text\" placeholder=\"https://www.google.com\" class=\"input input-bordered\"></label><label class=\"input-group input-group-vertical\"><span>courses offered</span><input type=\"text\" placeholder=\"Java, Python, JavaScript\" class=\"input input-bordered\"></label><label class=\"input-group input-group-vertical\"><span>location</span><input type=\"text\" placeholder=\"Austin, TX\" class=\"input input-bordered\"></label><button class=\"btn\">Submit`),\n  _tmpl$3 = /*#__PURE__*/_$template(`<tr>`),\n  _tmpl$4 = /*#__PURE__*/_$template(`<div><!#><!/><!#><!/>`),\n  _tmpl$5 = /*#__PURE__*/_$template(`<th>`),\n  _tmpl$6 = /*#__PURE__*/_$template(`<td>`);\nimport { createSignal, For, Show } from 'solid-js';\n// import { getSchools } from '../services/service'\nimport { flexRender, getCoreRowModel, createSolidTable, getSortedRowModel, getPaginationRowModel, getFilteredRowModel, sortingFns } from '@tanstack/solid-table';\nimport { rankItem, compareItems } from '@tanstack/match-sorter-utils';\nconst defaultData = [{\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none coco\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}];\n\n//TODO: need to disable sorting for some columns\nconst defaultColumns = [{\n  accessorKey: 'name',\n  cell: info => info.getValue(),\n  header: () => 'Name'\n}, {\n  accessorKey: 'url',\n  header: () => 'Url'\n}, {\n  accessorKey: 'courses_offered',\n  header: () => 'Courses Offered',\n  cell: info => info.getValue().split(\" \").map(word => (() => {\n    const _el$ = _$getNextElement(_tmpl$);\n    _$insert(_el$, word);\n    return _el$;\n  })())\n}, {\n  accessorKey: 'location',\n  header: () => 'Location'\n}];\nexport default _$$component(_REGISTRY, \"Home\", function Home() {\n  const [data, setData] = createSignal([]);\n  const [sorting, setSorting] = createSignal([]);\n  const [columnFilters, setColumnFilters] = createSignal([]);\n  const [globalFilter, setGlobalFilter] = createSignal(\"\");\n  // const [data, setData] = createSignal([] as coding_school[])\n\n  // onMount(async () => {\n  //   const raw_data = await getSchools();\n  //   const filter_array = raw_data.map(({ name, url, courses_offered, location }) => {\n  //     return ({\n  //       name,\n  //       url,\n  //       courses_offered,\n  //       location,\n  //     })\n  //   })\n  //   setData(filter_array)\n  //   console.log(filter_array)\n  //\n  // })\n\n  setData(defaultData);\n  const fuzzyFilter = (row, columnId, value, addMeta) => {\n    // Rank the item\n    const itemRank = rankItem(row.getValue(columnId), value);\n\n    // Store the ranking info\n    addMeta(itemRank);\n\n    // Return if the item should be filtered in/out\n    return itemRank.passed;\n  };\n  const fuzzySort = (rowA, rowB, columnId) => {\n    let dir = 0;\n\n    // Only sort by rank if the column has ranking information\n    if (rowA.columnFiltersMeta[columnId]) {\n      dir = compareItems(rowA.columnFiltersMeta[columnId], rowB.columnFiltersMeta[columnId]);\n    }\n\n    // Provide an alphanumeric fallback for when the item ranks are equal\n    return dir === 0 ? sortingFns.alphanumeric(rowA, rowB, columnId) : dir;\n  };\n  const table = createSolidTable({\n    get data() {\n      return data();\n    },\n    filterFns: {\n      fuzzy: fuzzyFilter\n    },\n    state: {\n      get sorting() {\n        return sorting();\n      },\n      get globalFilter() {\n        return globalFilter();\n      }\n    },\n    onSortingChange: setSorting,\n    columns: defaultColumns,\n    getFilteredRowModel: getFilteredRowModel(),\n    globalFilterFn: fuzzyFilter,\n    onColumnFiltersChange: setColumnFilters,\n    onGlobalFilterChange: setGlobalFilter,\n    getCoreRowModel: getCoreRowModel(),\n    getSortedRowModel: getSortedRowModel(),\n    getPaginationRowModel: getPaginationRowModel()\n  });\n  return (() => {\n    const _el$2 = _$getNextElement(_tmpl$2),\n      _el$3 = _el$2.firstChild,\n      _el$4 = _el$3.nextSibling,\n      _el$5 = _el$4.firstChild,\n      _el$6 = _el$5.nextSibling,\n      _el$7 = _el$6.firstChild,\n      _el$8 = _el$7.nextSibling,\n      _el$9 = _el$4.nextSibling,\n      _el$10 = _el$9.firstChild,\n      _el$11 = _el$10.nextSibling,\n      _el$12 = _el$9.nextSibling,\n      _el$13 = _el$12.firstChild,\n      _el$14 = _el$13.nextSibling,\n      _el$15 = _el$12.nextSibling,\n      _el$16 = _el$15.firstChild,\n      _el$17 = _el$16.nextSibling,\n      _el$20 = _el$17.firstChild,\n      [_el$21, _co$] = _$getNextMarker(_el$20.nextSibling),\n      _el$18 = _el$21.nextSibling,\n      _el$22 = _el$18.nextSibling,\n      [_el$23, _co$2] = _$getNextMarker(_el$22.nextSibling);\n    _el$8.addEventListener(\"change\", e => setGlobalFilter(String(e.target.value)));\n    _$insert(_el$10, _$createComponent(For, {\n      get each() {\n        return table.getHeaderGroups();\n      },\n      children: headerGroup => (() => {\n        const _el$24 = _$getNextElement(_tmpl$3);\n        _$insert(_el$24, _$createComponent(For, {\n          get each() {\n            return headerGroup.headers;\n          },\n          children: header => (() => {\n            const _el$25 = _$getNextElement(_tmpl$5);\n            _$insert(_el$25, _$createComponent(Show, {\n              get when() {\n                return !header.isPlaceholder;\n              },\n              get children() {\n                const _el$26 = _$getNextElement(_tmpl$4),\n                  _el$27 = _el$26.firstChild,\n                  [_el$28, _co$3] = _$getNextMarker(_el$27.nextSibling),\n                  _el$29 = _el$28.nextSibling,\n                  [_el$30, _co$4] = _$getNextMarker(_el$29.nextSibling);\n                _$addEventListener(_el$26, \"click\", header.column.getToggleSortingHandler(), true);\n                _$insert(_el$26, () => flexRender(header.column.columnDef.header, header.getContext()), _el$28, _co$3);\n                _$insert(_el$26, () => ({\n                  asc: ' ðŸ”¼',\n                  desc: ' ðŸ”½'\n                })[header.column.getIsSorted()] ?? null, _el$30, _co$4);\n                _$effect(() => _$className(_el$26, header.column.getCanSort() ? 'cursor-pointer select-none' : undefined));\n                _$runHydrationEvents();\n                return _el$26;\n              }\n            }));\n            _$effect(() => _$setAttribute(_el$25, \"colspan\", header.colSpan));\n            return _el$25;\n          })()\n        }));\n        return _el$24;\n      })()\n    }));\n    _$insert(_el$11, _$createComponent(For, {\n      get each() {\n        return table.getRowModel().rows;\n      },\n      children: row => (() => {\n        const _el$31 = _$getNextElement(_tmpl$3);\n        _$insert(_el$31, _$createComponent(For, {\n          get each() {\n            return row.getVisibleCells();\n          },\n          children: cell => (() => {\n            const _el$32 = _$getNextElement(_tmpl$6);\n            _$insert(_el$32, () => flexRender(cell.column.columnDef.cell, cell.getContext()));\n            return _el$32;\n          })()\n        }));\n        return _el$31;\n      })()\n    }));\n    _el$13.$$click = () => table.previousPage();\n    _el$14.$$click = () => table.nextPage();\n    _$insert(_el$17, () => table.getState().pagination.pageIndex + 1, _el$21, _co$);\n    _$insert(_el$17, () => table.getPageCount(), _el$23, _co$2);\n    _$effect(_p$ => {\n      const _v$ = !table.getCanPreviousPage(),\n        _v$2 = !table.getCanNextPage();\n      _v$ !== _p$._v$ && (_el$13.disabled = _p$._v$ = _v$);\n      _v$2 !== _p$._v$2 && (_el$14.disabled = _p$._v$2 = _v$2);\n      return _p$;\n    }, {\n      _v$: undefined,\n      _v$2: undefined\n    });\n    _$runHydrationEvents();\n    return _el$2;\n  })();\n}, {\n  location: \"src/routes/index.tsx:250:15\"\n});\n_$delegateEvents([\"click\"]);\nif (import.meta.hot) {\n  _$$refresh(\"vite\", import.meta.hot, _REGISTRY);\n  import.meta.hot.accept();\n}",
      "start": 1685413275590,
      "end": 1685413275619,
      "order": "pre"
    },
    {
      "name": "vite:import-analysis",
      "result": "import { createHotContext as __vite__createHotContext } from \"/@vite/client\";import.meta.hot = __vite__createHotContext(\"/src/routes/index.tsx\");import { $$component as _$$component } from \"/@solid-refresh\";\nimport { $$refresh as _$$refresh } from \"/@solid-refresh\";\nimport { $$registry as _$$registry } from \"/@solid-refresh\";\nconst _REGISTRY = _$$registry();\nimport { template as _$template } from \"/node_modules/.vite/deps/solid-js_web.js?v=3b3fc1cb\";\nimport { delegateEvents as _$delegateEvents } from \"/node_modules/.vite/deps/solid-js_web.js?v=3b3fc1cb\";\nimport { setAttribute as _$setAttribute } from \"/node_modules/.vite/deps/solid-js_web.js?v=3b3fc1cb\";\nimport { className as _$className } from \"/node_modules/.vite/deps/solid-js_web.js?v=3b3fc1cb\";\nimport { addEventListener as _$addEventListener } from \"/node_modules/.vite/deps/solid-js_web.js?v=3b3fc1cb\";\nimport { effect as _$effect } from \"/node_modules/.vite/deps/solid-js_web.js?v=3b3fc1cb\";\nimport { runHydrationEvents as _$runHydrationEvents } from \"/node_modules/.vite/deps/solid-js_web.js?v=3b3fc1cb\";\nimport { getNextMarker as _$getNextMarker } from \"/node_modules/.vite/deps/solid-js_web.js?v=3b3fc1cb\";\nimport { createComponent as _$createComponent } from \"/node_modules/.vite/deps/solid-js_web.js?v=3b3fc1cb\";\nimport { getNextElement as _$getNextElement } from \"/node_modules/.vite/deps/solid-js_web.js?v=3b3fc1cb\";\nimport { insert as _$insert } from \"/node_modules/.vite/deps/solid-js_web.js?v=3b3fc1cb\";\nconst _tmpl$ = /*#__PURE__*/_$template(`<span class=\"badge mx-1\">`),\n  _tmpl$2 = /*#__PURE__*/_$template(`<main class=\"prose text-center mx-auto text-gray-700 p-4\"><h1 class=\"max-6-xs text-6xl font-bold uppercase my-16\">Coding Schools In My City</h1><div class=\"form-control\"><label class=\"label\">Press <span class=\"kbd ml-1 mr-auto\">Enter</span></label><label class=\"input-group\"><span>Search</span><input type=\"text\" class=\"input input-bordered\"></label></div><table><thead></thead><tbody></tbody></table><div class=\"btn-group\"><button class=\"btn btn-primary\">&lt;</button><button class=\"btn btn-secondary\">></button></div><span><div>Page</div><strong><!#><!/> of <!#><!/></strong></span><form class=\"flex flex-col justify-center gap-3\"><h2> Fill up form below to add your school </h2><label class=\"input-group input-group-vertical \"><span>name</span><input type=\"text\" placeholder=\"My Coding School\" class=\"input input-bordered\"></label><label class=\"input-group input-group-vertical\"><span>url</span><input type=\"text\" placeholder=\"https://www.google.com\" class=\"input input-bordered\"></label><label class=\"input-group input-group-vertical\"><span>courses offered</span><input type=\"text\" placeholder=\"Java, Python, JavaScript\" class=\"input input-bordered\"></label><label class=\"input-group input-group-vertical\"><span>location</span><input type=\"text\" placeholder=\"Austin, TX\" class=\"input input-bordered\"></label><button class=\"btn\">Submit`),\n  _tmpl$3 = /*#__PURE__*/_$template(`<tr>`),\n  _tmpl$4 = /*#__PURE__*/_$template(`<div><!#><!/><!#><!/>`),\n  _tmpl$5 = /*#__PURE__*/_$template(`<th>`),\n  _tmpl$6 = /*#__PURE__*/_$template(`<td>`);\nimport { createSignal, For, Show } from \"/node_modules/.vite/deps/solid-js.js?v=3b3fc1cb\";\n// import { getSchools } from '../services/service'\nimport { flexRender, getCoreRowModel, createSolidTable, getSortedRowModel, getPaginationRowModel, getFilteredRowModel, sortingFns } from \"/node_modules/@tanstack/solid-table/build/lib/index.mjs?v=fac3bc7e\";\nimport { rankItem, compareItems } from \"/node_modules/.vite/deps/@tanstack_match-sorter-utils.js?v=7d850d6b\";\nconst defaultData = [{\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none coco\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}];\n\n//TODO: need to disable sorting for some columns\nconst defaultColumns = [{\n  accessorKey: 'name',\n  cell: info => info.getValue(),\n  header: () => 'Name'\n}, {\n  accessorKey: 'url',\n  header: () => 'Url'\n}, {\n  accessorKey: 'courses_offered',\n  header: () => 'Courses Offered',\n  cell: info => info.getValue().split(\" \").map(word => (() => {\n    const _el$ = _$getNextElement(_tmpl$);\n    _$insert(_el$, word);\n    return _el$;\n  })())\n}, {\n  accessorKey: 'location',\n  header: () => 'Location'\n}];\nexport default _$$component(_REGISTRY, \"Home\", function Home() {\n  const [data, setData] = createSignal([]);\n  const [sorting, setSorting] = createSignal([]);\n  const [columnFilters, setColumnFilters] = createSignal([]);\n  const [globalFilter, setGlobalFilter] = createSignal(\"\");\n  // const [data, setData] = createSignal([] as coding_school[])\n\n  // onMount(async () => {\n  //   const raw_data = await getSchools();\n  //   const filter_array = raw_data.map(({ name, url, courses_offered, location }) => {\n  //     return ({\n  //       name,\n  //       url,\n  //       courses_offered,\n  //       location,\n  //     })\n  //   })\n  //   setData(filter_array)\n  //   console.log(filter_array)\n  //\n  // })\n\n  setData(defaultData);\n  const fuzzyFilter = (row, columnId, value, addMeta) => {\n    // Rank the item\n    const itemRank = rankItem(row.getValue(columnId), value);\n\n    // Store the ranking info\n    addMeta(itemRank);\n\n    // Return if the item should be filtered in/out\n    return itemRank.passed;\n  };\n  const fuzzySort = (rowA, rowB, columnId) => {\n    let dir = 0;\n\n    // Only sort by rank if the column has ranking information\n    if (rowA.columnFiltersMeta[columnId]) {\n      dir = compareItems(rowA.columnFiltersMeta[columnId], rowB.columnFiltersMeta[columnId]);\n    }\n\n    // Provide an alphanumeric fallback for when the item ranks are equal\n    return dir === 0 ? sortingFns.alphanumeric(rowA, rowB, columnId) : dir;\n  };\n  const table = createSolidTable({\n    get data() {\n      return data();\n    },\n    filterFns: {\n      fuzzy: fuzzyFilter\n    },\n    state: {\n      get sorting() {\n        return sorting();\n      },\n      get globalFilter() {\n        return globalFilter();\n      }\n    },\n    onSortingChange: setSorting,\n    columns: defaultColumns,\n    getFilteredRowModel: getFilteredRowModel(),\n    globalFilterFn: fuzzyFilter,\n    onColumnFiltersChange: setColumnFilters,\n    onGlobalFilterChange: setGlobalFilter,\n    getCoreRowModel: getCoreRowModel(),\n    getSortedRowModel: getSortedRowModel(),\n    getPaginationRowModel: getPaginationRowModel()\n  });\n  return (() => {\n    const _el$2 = _$getNextElement(_tmpl$2),\n      _el$3 = _el$2.firstChild,\n      _el$4 = _el$3.nextSibling,\n      _el$5 = _el$4.firstChild,\n      _el$6 = _el$5.nextSibling,\n      _el$7 = _el$6.firstChild,\n      _el$8 = _el$7.nextSibling,\n      _el$9 = _el$4.nextSibling,\n      _el$10 = _el$9.firstChild,\n      _el$11 = _el$10.nextSibling,\n      _el$12 = _el$9.nextSibling,\n      _el$13 = _el$12.firstChild,\n      _el$14 = _el$13.nextSibling,\n      _el$15 = _el$12.nextSibling,\n      _el$16 = _el$15.firstChild,\n      _el$17 = _el$16.nextSibling,\n      _el$20 = _el$17.firstChild,\n      [_el$21, _co$] = _$getNextMarker(_el$20.nextSibling),\n      _el$18 = _el$21.nextSibling,\n      _el$22 = _el$18.nextSibling,\n      [_el$23, _co$2] = _$getNextMarker(_el$22.nextSibling);\n    _el$8.addEventListener(\"change\", e => setGlobalFilter(String(e.target.value)));\n    _$insert(_el$10, _$createComponent(For, {\n      get each() {\n        return table.getHeaderGroups();\n      },\n      children: headerGroup => (() => {\n        const _el$24 = _$getNextElement(_tmpl$3);\n        _$insert(_el$24, _$createComponent(For, {\n          get each() {\n            return headerGroup.headers;\n          },\n          children: header => (() => {\n            const _el$25 = _$getNextElement(_tmpl$5);\n            _$insert(_el$25, _$createComponent(Show, {\n              get when() {\n                return !header.isPlaceholder;\n              },\n              get children() {\n                const _el$26 = _$getNextElement(_tmpl$4),\n                  _el$27 = _el$26.firstChild,\n                  [_el$28, _co$3] = _$getNextMarker(_el$27.nextSibling),\n                  _el$29 = _el$28.nextSibling,\n                  [_el$30, _co$4] = _$getNextMarker(_el$29.nextSibling);\n                _$addEventListener(_el$26, \"click\", header.column.getToggleSortingHandler(), true);\n                _$insert(_el$26, () => flexRender(header.column.columnDef.header, header.getContext()), _el$28, _co$3);\n                _$insert(_el$26, () => ({\n                  asc: ' ðŸ”¼',\n                  desc: ' ðŸ”½'\n                })[header.column.getIsSorted()] ?? null, _el$30, _co$4);\n                _$effect(() => _$className(_el$26, header.column.getCanSort() ? 'cursor-pointer select-none' : undefined));\n                _$runHydrationEvents();\n                return _el$26;\n              }\n            }));\n            _$effect(() => _$setAttribute(_el$25, \"colspan\", header.colSpan));\n            return _el$25;\n          })()\n        }));\n        return _el$24;\n      })()\n    }));\n    _$insert(_el$11, _$createComponent(For, {\n      get each() {\n        return table.getRowModel().rows;\n      },\n      children: row => (() => {\n        const _el$31 = _$getNextElement(_tmpl$3);\n        _$insert(_el$31, _$createComponent(For, {\n          get each() {\n            return row.getVisibleCells();\n          },\n          children: cell => (() => {\n            const _el$32 = _$getNextElement(_tmpl$6);\n            _$insert(_el$32, () => flexRender(cell.column.columnDef.cell, cell.getContext()));\n            return _el$32;\n          })()\n        }));\n        return _el$31;\n      })()\n    }));\n    _el$13.$$click = () => table.previousPage();\n    _el$14.$$click = () => table.nextPage();\n    _$insert(_el$17, () => table.getState().pagination.pageIndex + 1, _el$21, _co$);\n    _$insert(_el$17, () => table.getPageCount(), _el$23, _co$2);\n    _$effect(_p$ => {\n      const _v$ = !table.getCanPreviousPage(),\n        _v$2 = !table.getCanNextPage();\n      _v$ !== _p$._v$ && (_el$13.disabled = _p$._v$ = _v$);\n      _v$2 !== _p$._v$2 && (_el$14.disabled = _p$._v$2 = _v$2);\n      return _p$;\n    }, {\n      _v$: undefined,\n      _v$2: undefined\n    });\n    _$runHydrationEvents();\n    return _el$2;\n  })();\n}, {\n  location: \"src/routes/index.tsx:250:15\"\n});\n_$delegateEvents([\"click\"]);\nif (import.meta.hot) {\n  _$$refresh(\"vite\", import.meta.hot, _REGISTRY);\n  import.meta.hot.accept();\n}",
      "start": 1685413275619,
      "end": 1685413275621,
      "order": "normal"
    }
  ]
}
