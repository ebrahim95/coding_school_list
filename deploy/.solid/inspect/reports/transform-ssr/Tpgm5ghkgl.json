{
  "resolvedId": "/home/ebrahim/Desktop/coding_school_list/web_app/src/routes/index.tsx",
  "transforms": [
    {
      "name": "__load__",
      "result": "import { A } from \"solid-start\";\nimport { createSignal, onMount, For, Show } from 'solid-js';\nimport { coding_school } from '../services/utils'\n// import { getSchools } from '../services/service'\nimport {\n  flexRender,\n  getCoreRowModel,\n  ColumnDef,\n  createSolidTable,\n  SortingState,\n  getSortedRowModel,\n  getPaginationRowModel,\n  getFilteredRowModel,\n  sortingFns,\n  ColumnFiltersState\n} from '@tanstack/solid-table'\n\n\nimport {\n  rankItem,\n  compareItems\n} from '@tanstack/match-sorter-utils'\n\n\n\nconst defaultData: coding_school[] = [\n  {\n    name: 'joe',\n    url: 'google..com',\n    courses_offered: \"none coco\",\n    location: \"may\"\n  }, {\n    name: 'joe',\n    url: 'google..com',\n    courses_offered: \"none\",\n    location: \"may\"\n  }, {\n    name: 'joe',\n    url: 'google..com',\n    courses_offered: \"none\",\n    location: \"may\"\n  }, {\n    name: 'joe',\n    url: 'google..com',\n    courses_offered: \"none\",\n    location: \"may\"\n  }, {\n    name: 'joe',\n    url: 'google..com',\n    courses_offered: \"none\",\n    location: \"may\"\n  }, {\n    name: 'joe',\n    url: 'google..com',\n    courses_offered: \"none\",\n    location: \"may\"\n  }, {\n    name: 'joe',\n    url: 'google..com',\n    courses_offered: \"none\",\n    location: \"may\"\n  }, {\n    name: 'joe',\n    url: 'google..com',\n    courses_offered: \"none\",\n    location: \"may\"\n  }, {\n    name: 'joe',\n    url: 'google..com',\n    courses_offered: \"none\",\n    location: \"may\"\n  }, {\n    name: 'joe',\n    url: 'google..com',\n    courses_offered: \"none\",\n    location: \"may\"\n  }, {\n    name: 'joe',\n    url: 'google..com',\n    courses_offered: \"none\",\n    location: \"may\"\n  }, {\n    name: 'joe',\n    url: 'google..com',\n    courses_offered: \"none\",\n    location: \"may\"\n  }, {\n    name: 'joe',\n    url: 'google..com',\n    courses_offered: \"none\",\n    location: \"may\"\n  }, {\n    name: 'joe',\n    url: 'google..com',\n    courses_offered: \"none\",\n    location: \"may\"\n  }, {\n    name: 'joe',\n    url: 'google..com',\n    courses_offered: \"none\",\n    location: \"may\"\n  }, {\n    name: 'joe',\n    url: 'google..com',\n    courses_offered: \"none\",\n    location: \"may\"\n  }, {\n    name: 'joe',\n    url: 'google..com',\n    courses_offered: \"none\",\n    location: \"may\"\n  }, {\n    name: 'joe',\n    url: 'google..com',\n    courses_offered: \"none\",\n    location: \"may\"\n  }, {\n    name: 'joe',\n    url: 'google..com',\n    courses_offered: \"none\",\n    location: \"may\"\n  }, {\n    name: 'joe',\n    url: 'google..com',\n    courses_offered: \"none\",\n    location: \"may\"\n  }, {\n    name: 'joe',\n    url: 'google..com',\n    courses_offered: \"none\",\n    location: \"may\"\n  }, {\n    name: 'joe',\n    url: 'google..com',\n    courses_offered: \"none\",\n    location: \"may\"\n  }, {\n    name: 'joe',\n    url: 'google..com',\n    courses_offered: \"none\",\n    location: \"may\"\n  }, {\n    name: 'joe',\n    url: 'google..com',\n    courses_offered: \"none\",\n    location: \"may\"\n  }, {\n    name: 'joe',\n    url: 'google..com',\n    courses_offered: \"none\",\n    location: \"may\"\n  }, {\n    name: 'joe',\n    url: 'google..com',\n    courses_offered: \"none\",\n    location: \"may\"\n  }, {\n    name: 'joe',\n    url: 'google..com',\n    courses_offered: \"none\",\n    location: \"may\"\n  }, {\n    name: 'joe',\n    url: 'google..com',\n    courses_offered: \"none\",\n    location: \"may\"\n  }, {\n    name: 'joe',\n    url: 'google..com',\n    courses_offered: \"none\",\n    location: \"may\"\n  }, {\n    name: 'joe',\n    url: 'google..com',\n    courses_offered: \"none\",\n    location: \"may\"\n  }, {\n    name: 'joe',\n    url: 'google..com',\n    courses_offered: \"none\",\n    location: \"may\"\n  }, {\n    name: 'joe',\n    url: 'google..com',\n    courses_offered: \"none\",\n    location: \"may\"\n  }, {\n    name: 'joe',\n    url: 'google..com',\n    courses_offered: \"none\",\n    location: \"may\"\n  }, {\n    name: 'joe',\n    url: 'google..com',\n    courses_offered: \"none\",\n    location: \"may\"\n  }, {\n    name: 'joe',\n    url: 'google..com',\n    courses_offered: \"none\",\n    location: \"may\"\n  }, {\n    name: 'joe',\n    url: 'google..com',\n    courses_offered: \"none\",\n    location: \"may\"\n  }, {\n    name: 'joe',\n    url: 'google..com',\n    courses_offered: \"none\",\n    location: \"may\"\n  }, {\n    name: 'joe',\n    url: 'google..com',\n    courses_offered: \"none\",\n    location: \"may\"\n  }, {\n    name: 'joe',\n    url: 'google..com',\n    courses_offered: \"none\",\n    location: \"may\"\n  }, {\n    name: 'joe',\n    url: 'google..com',\n    courses_offered: \"none\",\n    location: \"may\"\n  }, {\n    name: 'joe',\n    url: 'google..com',\n    courses_offered: \"none\",\n    location: \"may\"\n  },\n]\n\n\n//TODO: need to disable sorting for some columns\nconst defaultColumns: ColumnDef<coding_school>[] = [\n  {\n    accessorKey: 'name',\n    cell: info => info.getValue<string>(),\n    header: () => 'Name',\n  },\n  {\n    accessorKey: 'url',\n    header: () => 'Url',\n  },\n  {\n    accessorKey: 'courses_offered',\n    header: () => 'Courses Offered',\n    cell: info => info.getValue<string>().split(\" \").map(word => <span class=\"badge mx-1\">{word}</span>),\n  },\n  {\n    accessorKey: 'location',\n    header: () => 'Location',\n  },\n]\n\nexport default function Home() {\n\n  const [data, setData] = createSignal([] as coding_school[])\n  const [sorting, setSorting] = createSignal<SortingState>([])\n  const [columnFilters, setColumnFilters] = createSignal<ColumnFiltersState>([])\n  const [globalFilter, setGlobalFilter] = createSignal<any>(\"\")\n  // const [data, setData] = createSignal([] as coding_school[])\n\n  // onMount(async () => {\n  //   const raw_data = await getSchools();\n  //   const filter_array = raw_data.map(({ name, url, courses_offered, location }) => {\n  //     return ({\n  //       name,\n  //       url,\n  //       courses_offered,\n  //       location,\n  //     })\n  //   })\n  //   setData(filter_array)\n  //   console.log(filter_array)\n  //\n  // })\n\n  setData(defaultData)\n\n\n  const fuzzyFilter = (row: any, columnId: any, value: any, addMeta: any) => {\n    // Rank the item\n    const itemRank = rankItem(row.getValue(columnId), value)\n\n    // Store the ranking info\n    addMeta(itemRank)\n\n    // Return if the item should be filtered in/out\n    return itemRank.passed\n  }\n\n  const fuzzySort = (rowA: any, rowB: any, columnId: any) => {\n    let dir = 0\n\n    // Only sort by rank if the column has ranking information\n    if (rowA.columnFiltersMeta[columnId]) {\n      dir = compareItems(\n        rowA.columnFiltersMeta[columnId]!,\n        rowB.columnFiltersMeta[columnId]!\n      )\n    }\n\n    // Provide an alphanumeric fallback for when the item ranks are equal\n    return dir === 0 ? sortingFns.alphanumeric(rowA, rowB, columnId) : dir\n\n  }\n\n\n  const table = createSolidTable({\n    get data() {\n      return data()\n    },\n    filterFns: {\n      fuzzy: fuzzyFilter,\n    },\n    state: {\n      get sorting() {\n        return sorting()\n      },\n      get globalFilter() {\n        return globalFilter()\n      }\n    },\n    onSortingChange: setSorting,\n    columns: defaultColumns,\n    getFilteredRowModel: getFilteredRowModel(),\n    globalFilterFn: fuzzyFilter,\n    onColumnFiltersChange: setColumnFilters,\n    onGlobalFilterChange: setGlobalFilter,\n    getCoreRowModel: getCoreRowModel(),\n    getSortedRowModel: getSortedRowModel(),\n    getPaginationRowModel: getPaginationRowModel()\n  })\n\n  return (\n    <main class=\"prose text-center mx-auto text-gray-700 p-4\">\n\n      <h1 class=\"max-6-xs text-6xl font-bold uppercase my-16\">\n        Coding Schools In My City\n      </h1>\n      <div class=\"form-control\">\n        <label class=\"label\">\n          Press <span class=\"kbd ml-1 mr-auto\">Enter</span>\n        </label>\n        <label class=\"input-group\">\n          <span>Search</span>\n          <input\n            type=\"text\"\n            onChange={(e) => setGlobalFilter(String(e.target.value))}\n            class=\"input input-bordered\"\n          />\n        </label>\n      </div>\n      <table>\n        <thead>\n          <For each={table.getHeaderGroups()}>\n            {headerGroup => (\n              <tr>\n                <For each={headerGroup.headers}>\n                  {header => (\n                    <th colSpan={header.colSpan}>\n                      <Show when={!header.isPlaceholder}>\n                        <div\n                          class={\n                            header.column.getCanSort()\n                              ? 'cursor-pointer select-none'\n                              : undefined\n                          }\n                          onClick={header.column.getToggleSortingHandler()}\n                        >\n                          {flexRender(\n                            header.column.columnDef.header,\n                            header.getContext()\n                          )}\n                          {{\n                            asc: ' ðŸ”¼',\n                            desc: ' ðŸ”½',\n                          }[header.column.getIsSorted() as string] ?? null}\n                        </div>\n                      </Show>\n                    </th>\n                  )}\n                </For>\n              </tr>\n            )}\n          </For>\n        </thead>\n        <tbody>\n          <For each={table.getRowModel().rows}>\n            {row => (\n              <tr>\n                <For each={row.getVisibleCells()}>\n                  {cell => (\n                    <td>\n                      {flexRender(\n                        cell.column.columnDef.cell,\n                        cell.getContext()\n                      )}\n                    </td>\n                  )}\n                </For>\n              </tr>\n            )}\n          </For>\n        </tbody>\n      </table>\n      <div class=\"btn-group\">\n        <button\n          class=\"btn btn-primary\"\n          onClick={() => table.previousPage()}\n          disabled={!table.getCanPreviousPage()}\n        >\n          {'<'}\n        </button>\n        <button\n          class=\"btn btn-secondary\"\n          onClick={() => table.nextPage()}\n          disabled={!table.getCanNextPage()}\n        >\n          {'>'}\n        </button>\n      </div>\n      <span>\n        <div>Page</div>\n        <strong>\n          {table.getState().pagination.pageIndex + 1} of{' '}\n          {table.getPageCount()}\n        </strong>\n      </span>\n      <form class=\"flex flex-col justify-center gap-3\">\n        <h2> Fill up form below to add your school </h2>\n        <label class=\"input-group input-group-vertical \">\n          <span>name</span>\n          <input type=\"text\" placeholder=\"My Coding School\" class=\"input input-bordered\" />\n        </label>\n        <label class=\"input-group input-group-vertical\">\n          <span>url</span>\n          <input type=\"text\" placeholder=\"https://www.google.com\" class=\"input input-bordered\" />\n        </label>\n        <label class=\"input-group input-group-vertical\">\n          <span>courses offered</span>\n          <input type=\"text\" placeholder=\"Java, Python, JavaScript\" class=\"input input-bordered\" />\n        </label>\n        <label class=\"input-group input-group-vertical\">\n          <span>location</span>\n          <input type=\"text\" placeholder=\"Austin, TX\" class=\"input input-bordered\" />\n        </label>\n\n        <button class=\"btn\">\n          Submit\n        </button>\n      </form>\n      {/* <p class=\"my-4\"> */}\n      {/*   <span>Home</span> */}\n      {/*   {\" - \"} */}\n      {/*   <A href=\"/about\" class=\"text-sky-600 hover:underline\"> */}\n      {/*     About Page */}\n      {/*   </A>{\" \"} */}\n      {/* </p> */}\n    </main>\n  );\n}\n",
      "start": 1685413273923,
      "end": 1685413273923
    },
    {
      "name": "solid-start-file-system-router",
      "result": "import { ssrAttribute as _$ssrAttribute } from \"solid-js/web\";\nimport { createComponent as _$createComponent } from \"solid-js/web\";\nimport { ssr as _$ssr } from \"solid-js/web\";\nimport { escape as _$escape } from \"solid-js/web\";\nimport { ssrHydrationKey as _$ssrHydrationKey } from \"solid-js/web\";\nconst _tmpl$ = [\"<span\", \" class=\\\"badge mx-1\\\">\", \"</span>\"],\n  _tmpl$2 = [\"<main\", \" class=\\\"prose text-center mx-auto text-gray-700 p-4\\\"><h1 class=\\\"max-6-xs text-6xl font-bold uppercase my-16\\\">Coding Schools In My City</h1><div class=\\\"form-control\\\"><label class=\\\"label\\\">Press <span class=\\\"kbd ml-1 mr-auto\\\">Enter</span></label><label class=\\\"input-group\\\"><span>Search</span><input type=\\\"text\\\" class=\\\"input input-bordered\\\"></label></div><table><thead>\", \"</thead><tbody>\", \"</tbody></table><div class=\\\"btn-group\\\"><button class=\\\"btn btn-primary\\\"\", \">&lt;</button><button class=\\\"btn btn-secondary\\\"\", \">></button></div><span><div>Page</div><strong><!--#-->\", \"<!--/--> of <!--#-->\", \"<!--/--></strong></span><form class=\\\"flex flex-col justify-center gap-3\\\"><h2> Fill up form below to add your school </h2><label class=\\\"input-group input-group-vertical \\\"><span>name</span><input type=\\\"text\\\" placeholder=\\\"My Coding School\\\" class=\\\"input input-bordered\\\"></label><label class=\\\"input-group input-group-vertical\\\"><span>url</span><input type=\\\"text\\\" placeholder=\\\"https://www.google.com\\\" class=\\\"input input-bordered\\\"></label><label class=\\\"input-group input-group-vertical\\\"><span>courses offered</span><input type=\\\"text\\\" placeholder=\\\"Java, Python, JavaScript\\\" class=\\\"input input-bordered\\\"></label><label class=\\\"input-group input-group-vertical\\\"><span>location</span><input type=\\\"text\\\" placeholder=\\\"Austin, TX\\\" class=\\\"input input-bordered\\\"></label><button class=\\\"btn\\\">Submit</button></form></main>\"],\n  _tmpl$3 = [\"<tr\", \">\", \"</tr>\"],\n  _tmpl$4 = [\"<div\", \"><!--#-->\", \"<!--/--><!--#-->\", \"<!--/--></div>\"],\n  _tmpl$5 = [\"<th\", \">\", \"</th>\"],\n  _tmpl$6 = [\"<td\", \">\", \"</td>\"];\nimport \"solid-start\";\nimport { createSignal, For, Show } from 'solid-js';\n// import { getSchools } from '../services/service'\nimport { flexRender, getCoreRowModel, createSolidTable, getSortedRowModel, getPaginationRowModel, getFilteredRowModel, sortingFns } from '@tanstack/solid-table';\nimport { rankItem, compareItems } from '@tanstack/match-sorter-utils';\nconst defaultData = [{\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none coco\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}];\n\n//TODO: need to disable sorting for some columns\nconst defaultColumns = [{\n  accessorKey: 'name',\n  cell: info => info.getValue(),\n  header: () => 'Name'\n}, {\n  accessorKey: 'url',\n  header: () => 'Url'\n}, {\n  accessorKey: 'courses_offered',\n  header: () => 'Courses Offered',\n  cell: info => info.getValue().split(\" \").map(word => _$ssr(_tmpl$, _$ssrHydrationKey(), _$escape(word)))\n}, {\n  accessorKey: 'location',\n  header: () => 'Location'\n}];\nexport default function Home() {\n  const [data, setData] = createSignal([]);\n  const [sorting, setSorting] = createSignal([]);\n  const [columnFilters, setColumnFilters] = createSignal([]);\n  const [globalFilter, setGlobalFilter] = createSignal(\"\");\n  // const [data, setData] = createSignal([] as coding_school[])\n\n  // onMount(async () => {\n  //   const raw_data = await getSchools();\n  //   const filter_array = raw_data.map(({ name, url, courses_offered, location }) => {\n  //     return ({\n  //       name,\n  //       url,\n  //       courses_offered,\n  //       location,\n  //     })\n  //   })\n  //   setData(filter_array)\n  //   console.log(filter_array)\n  //\n  // })\n\n  setData(defaultData);\n  const fuzzyFilter = (row, columnId, value, addMeta) => {\n    // Rank the item\n    const itemRank = rankItem(row.getValue(columnId), value);\n\n    // Store the ranking info\n    addMeta(itemRank);\n\n    // Return if the item should be filtered in/out\n    return itemRank.passed;\n  };\n  const fuzzySort = (rowA, rowB, columnId) => {\n    let dir = 0;\n\n    // Only sort by rank if the column has ranking information\n    if (rowA.columnFiltersMeta[columnId]) {\n      dir = compareItems(rowA.columnFiltersMeta[columnId], rowB.columnFiltersMeta[columnId]);\n    }\n\n    // Provide an alphanumeric fallback for when the item ranks are equal\n    return dir === 0 ? sortingFns.alphanumeric(rowA, rowB, columnId) : dir;\n  };\n  const table = createSolidTable({\n    get data() {\n      return data();\n    },\n    filterFns: {\n      fuzzy: fuzzyFilter\n    },\n    state: {\n      get sorting() {\n        return sorting();\n      },\n      get globalFilter() {\n        return globalFilter();\n      }\n    },\n    onSortingChange: setSorting,\n    columns: defaultColumns,\n    getFilteredRowModel: getFilteredRowModel(),\n    globalFilterFn: fuzzyFilter,\n    onColumnFiltersChange: setColumnFilters,\n    onGlobalFilterChange: setGlobalFilter,\n    getCoreRowModel: getCoreRowModel(),\n    getSortedRowModel: getSortedRowModel(),\n    getPaginationRowModel: getPaginationRowModel()\n  });\n  return _$ssr(_tmpl$2, _$ssrHydrationKey(), _$escape(_$createComponent(For, {\n    get each() {\n      return table.getHeaderGroups();\n    },\n    children: headerGroup => _$ssr(_tmpl$3, _$ssrHydrationKey(), _$escape(_$createComponent(For, {\n      get each() {\n        return headerGroup.headers;\n      },\n      children: header => _$ssr(_tmpl$5, _$ssrHydrationKey() + _$ssrAttribute(\"colspan\", _$escape(header.colSpan, true), false), _$escape(_$createComponent(Show, {\n        get when() {\n          return !header.isPlaceholder;\n        },\n        get children() {\n          return _$ssr(_tmpl$4, _$ssrHydrationKey() + _$ssrAttribute(\"class\", header.column.getCanSort() ? 'cursor-pointer select-none' : _$escape(undefined, true), false), _$escape(flexRender(header.column.columnDef.header, header.getContext())), _$escape({\n            asc: ' ðŸ”¼',\n            desc: ' ðŸ”½'\n          }[header.column.getIsSorted()]) ?? _$escape(null));\n        }\n      })))\n    })))\n  })), _$escape(_$createComponent(For, {\n    get each() {\n      return table.getRowModel().rows;\n    },\n    children: row => _$ssr(_tmpl$3, _$ssrHydrationKey(), _$escape(_$createComponent(For, {\n      get each() {\n        return row.getVisibleCells();\n      },\n      children: cell => _$ssr(_tmpl$6, _$ssrHydrationKey(), _$escape(flexRender(cell.column.columnDef.cell, cell.getContext())))\n    })))\n  })), _$ssrAttribute(\"disabled\", !table.getCanPreviousPage(), true), _$ssrAttribute(\"disabled\", !table.getCanNextPage(), true), _$escape(table.getState().pagination.pageIndex) + 1, _$escape(table.getPageCount()));\n}",
      "start": 1685413273923,
      "end": 1685413273972,
      "order": "pre"
    },
    {
      "name": "solid",
      "result": "import { ssrAttribute as _$ssrAttribute } from \"solid-js/web\";\nimport { createComponent as _$createComponent } from \"solid-js/web\";\nimport { ssr as _$ssr } from \"solid-js/web\";\nimport { escape as _$escape } from \"solid-js/web\";\nimport { ssrHydrationKey as _$ssrHydrationKey } from \"solid-js/web\";\nconst _tmpl$ = [\"<span\", \" class=\\\"badge mx-1\\\">\", \"</span>\"],\n  _tmpl$2 = [\"<main\", \" class=\\\"prose text-center mx-auto text-gray-700 p-4\\\"><h1 class=\\\"max-6-xs text-6xl font-bold uppercase my-16\\\">Coding Schools In My City</h1><div class=\\\"form-control\\\"><label class=\\\"label\\\">Press <span class=\\\"kbd ml-1 mr-auto\\\">Enter</span></label><label class=\\\"input-group\\\"><span>Search</span><input type=\\\"text\\\" class=\\\"input input-bordered\\\"></label></div><table><thead>\", \"</thead><tbody>\", \"</tbody></table><div class=\\\"btn-group\\\"><button class=\\\"btn btn-primary\\\"\", \">&lt;</button><button class=\\\"btn btn-secondary\\\"\", \">></button></div><span><div>Page</div><strong><!--#-->\", \"<!--/--> of <!--#-->\", \"<!--/--></strong></span><form class=\\\"flex flex-col justify-center gap-3\\\"><h2> Fill up form below to add your school </h2><label class=\\\"input-group input-group-vertical \\\"><span>name</span><input type=\\\"text\\\" placeholder=\\\"My Coding School\\\" class=\\\"input input-bordered\\\"></label><label class=\\\"input-group input-group-vertical\\\"><span>url</span><input type=\\\"text\\\" placeholder=\\\"https://www.google.com\\\" class=\\\"input input-bordered\\\"></label><label class=\\\"input-group input-group-vertical\\\"><span>courses offered</span><input type=\\\"text\\\" placeholder=\\\"Java, Python, JavaScript\\\" class=\\\"input input-bordered\\\"></label><label class=\\\"input-group input-group-vertical\\\"><span>location</span><input type=\\\"text\\\" placeholder=\\\"Austin, TX\\\" class=\\\"input input-bordered\\\"></label><button class=\\\"btn\\\">Submit</button></form></main>\"],\n  _tmpl$3 = [\"<tr\", \">\", \"</tr>\"],\n  _tmpl$4 = [\"<div\", \"><!--#-->\", \"<!--/--><!--#-->\", \"<!--/--></div>\"],\n  _tmpl$5 = [\"<th\", \">\", \"</th>\"],\n  _tmpl$6 = [\"<td\", \">\", \"</td>\"];\nimport \"solid-start\";\nimport { createSignal, For, Show } from 'solid-js';\n// import { getSchools } from '../services/service'\nimport { flexRender, getCoreRowModel, createSolidTable, getSortedRowModel, getPaginationRowModel, getFilteredRowModel, sortingFns } from '@tanstack/solid-table';\nimport { rankItem, compareItems } from '@tanstack/match-sorter-utils';\nconst defaultData = [{\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none coco\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}];\n\n//TODO: need to disable sorting for some columns\nconst defaultColumns = [{\n  accessorKey: 'name',\n  cell: info => info.getValue(),\n  header: () => 'Name'\n}, {\n  accessorKey: 'url',\n  header: () => 'Url'\n}, {\n  accessorKey: 'courses_offered',\n  header: () => 'Courses Offered',\n  cell: info => info.getValue().split(\" \").map(word => _$ssr(_tmpl$, _$ssrHydrationKey(), _$escape(word)))\n}, {\n  accessorKey: 'location',\n  header: () => 'Location'\n}];\nexport default function Home() {\n  const [data, setData] = createSignal([]);\n  const [sorting, setSorting] = createSignal([]);\n  const [columnFilters, setColumnFilters] = createSignal([]);\n  const [globalFilter, setGlobalFilter] = createSignal(\"\");\n  // const [data, setData] = createSignal([] as coding_school[])\n\n  // onMount(async () => {\n  //   const raw_data = await getSchools();\n  //   const filter_array = raw_data.map(({ name, url, courses_offered, location }) => {\n  //     return ({\n  //       name,\n  //       url,\n  //       courses_offered,\n  //       location,\n  //     })\n  //   })\n  //   setData(filter_array)\n  //   console.log(filter_array)\n  //\n  // })\n\n  setData(defaultData);\n  const fuzzyFilter = (row, columnId, value, addMeta) => {\n    // Rank the item\n    const itemRank = rankItem(row.getValue(columnId), value);\n\n    // Store the ranking info\n    addMeta(itemRank);\n\n    // Return if the item should be filtered in/out\n    return itemRank.passed;\n  };\n  const fuzzySort = (rowA, rowB, columnId) => {\n    let dir = 0;\n\n    // Only sort by rank if the column has ranking information\n    if (rowA.columnFiltersMeta[columnId]) {\n      dir = compareItems(rowA.columnFiltersMeta[columnId], rowB.columnFiltersMeta[columnId]);\n    }\n\n    // Provide an alphanumeric fallback for when the item ranks are equal\n    return dir === 0 ? sortingFns.alphanumeric(rowA, rowB, columnId) : dir;\n  };\n  const table = createSolidTable({\n    get data() {\n      return data();\n    },\n    filterFns: {\n      fuzzy: fuzzyFilter\n    },\n    state: {\n      get sorting() {\n        return sorting();\n      },\n      get globalFilter() {\n        return globalFilter();\n      }\n    },\n    onSortingChange: setSorting,\n    columns: defaultColumns,\n    getFilteredRowModel: getFilteredRowModel(),\n    globalFilterFn: fuzzyFilter,\n    onColumnFiltersChange: setColumnFilters,\n    onGlobalFilterChange: setGlobalFilter,\n    getCoreRowModel: getCoreRowModel(),\n    getSortedRowModel: getSortedRowModel(),\n    getPaginationRowModel: getPaginationRowModel()\n  });\n  return _$ssr(_tmpl$2, _$ssrHydrationKey(), _$escape(_$createComponent(For, {\n    get each() {\n      return table.getHeaderGroups();\n    },\n    children: headerGroup => _$ssr(_tmpl$3, _$ssrHydrationKey(), _$escape(_$createComponent(For, {\n      get each() {\n        return headerGroup.headers;\n      },\n      children: header => _$ssr(_tmpl$5, _$ssrHydrationKey() + _$ssrAttribute(\"colspan\", _$escape(header.colSpan, true), false), _$escape(_$createComponent(Show, {\n        get when() {\n          return !header.isPlaceholder;\n        },\n        get children() {\n          return _$ssr(_tmpl$4, _$ssrHydrationKey() + _$ssrAttribute(\"class\", header.column.getCanSort() ? 'cursor-pointer select-none' : _$escape(undefined, true), false), _$escape(flexRender(header.column.columnDef.header, header.getContext())), _$escape({\n            asc: ' ðŸ”¼',\n            desc: ' ðŸ”½'\n          }[header.column.getIsSorted()]) ?? _$escape(null));\n        }\n      })))\n    })))\n  })), _$escape(_$createComponent(For, {\n    get each() {\n      return table.getRowModel().rows;\n    },\n    children: row => _$ssr(_tmpl$3, _$ssrHydrationKey(), _$escape(_$createComponent(For, {\n      get each() {\n        return row.getVisibleCells();\n      },\n      children: cell => _$ssr(_tmpl$6, _$ssrHydrationKey(), _$escape(flexRender(cell.column.columnDef.cell, cell.getContext())))\n    })))\n  })), _$ssrAttribute(\"disabled\", !table.getCanPreviousPage(), true), _$ssrAttribute(\"disabled\", !table.getCanNextPage(), true), _$escape(table.getState().pagination.pageIndex) + 1, _$escape(table.getPageCount()));\n}",
      "start": 1685413273972,
      "end": 1685413273992,
      "order": "pre"
    },
    {
      "name": "vite:define",
      "result": "import { ssrAttribute as _$ssrAttribute } from \"solid-js/web\";\nimport { createComponent as _$createComponent } from \"solid-js/web\";\nimport { ssr as _$ssr } from \"solid-js/web\";\nimport { escape as _$escape } from \"solid-js/web\";\nimport { ssrHydrationKey as _$ssrHydrationKey } from \"solid-js/web\";\nconst _tmpl$ = [\"<span\", \" class=\\\"badge mx-1\\\">\", \"</span>\"],\n  _tmpl$2 = [\"<main\", \" class=\\\"prose text-center mx-auto text-gray-700 p-4\\\"><h1 class=\\\"max-6-xs text-6xl font-bold uppercase my-16\\\">Coding Schools In My City</h1><div class=\\\"form-control\\\"><label class=\\\"label\\\">Press <span class=\\\"kbd ml-1 mr-auto\\\">Enter</span></label><label class=\\\"input-group\\\"><span>Search</span><input type=\\\"text\\\" class=\\\"input input-bordered\\\"></label></div><table><thead>\", \"</thead><tbody>\", \"</tbody></table><div class=\\\"btn-group\\\"><button class=\\\"btn btn-primary\\\"\", \">&lt;</button><button class=\\\"btn btn-secondary\\\"\", \">></button></div><span><div>Page</div><strong><!--#-->\", \"<!--/--> of <!--#-->\", \"<!--/--></strong></span><form class=\\\"flex flex-col justify-center gap-3\\\"><h2> Fill up form below to add your school </h2><label class=\\\"input-group input-group-vertical \\\"><span>name</span><input type=\\\"text\\\" placeholder=\\\"My Coding School\\\" class=\\\"input input-bordered\\\"></label><label class=\\\"input-group input-group-vertical\\\"><span>url</span><input type=\\\"text\\\" placeholder=\\\"https://www.google.com\\\" class=\\\"input input-bordered\\\"></label><label class=\\\"input-group input-group-vertical\\\"><span>courses offered</span><input type=\\\"text\\\" placeholder=\\\"Java, Python, JavaScript\\\" class=\\\"input input-bordered\\\"></label><label class=\\\"input-group input-group-vertical\\\"><span>location</span><input type=\\\"text\\\" placeholder=\\\"Austin, TX\\\" class=\\\"input input-bordered\\\"></label><button class=\\\"btn\\\">Submit</button></form></main>\"],\n  _tmpl$3 = [\"<tr\", \">\", \"</tr>\"],\n  _tmpl$4 = [\"<div\", \"><!--#-->\", \"<!--/--><!--#-->\", \"<!--/--></div>\"],\n  _tmpl$5 = [\"<th\", \">\", \"</th>\"],\n  _tmpl$6 = [\"<td\", \">\", \"</td>\"];\nimport \"solid-start\";\nimport { createSignal, For, Show } from 'solid-js';\n// import { getSchools } from '../services/service'\nimport { flexRender, getCoreRowModel, createSolidTable, getSortedRowModel, getPaginationRowModel, getFilteredRowModel, sortingFns } from '@tanstack/solid-table';\nimport { rankItem, compareItems } from '@tanstack/match-sorter-utils';\nconst defaultData = [{\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none coco\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}];\n\n//TODO: need to disable sorting for some columns\nconst defaultColumns = [{\n  accessorKey: 'name',\n  cell: info => info.getValue(),\n  header: () => 'Name'\n}, {\n  accessorKey: 'url',\n  header: () => 'Url'\n}, {\n  accessorKey: 'courses_offered',\n  header: () => 'Courses Offered',\n  cell: info => info.getValue().split(\" \").map(word => _$ssr(_tmpl$, _$ssrHydrationKey(), _$escape(word)))\n}, {\n  accessorKey: 'location',\n  header: () => 'Location'\n}];\nexport default function Home() {\n  const [data, setData] = createSignal([]);\n  const [sorting, setSorting] = createSignal([]);\n  const [columnFilters, setColumnFilters] = createSignal([]);\n  const [globalFilter, setGlobalFilter] = createSignal(\"\");\n  // const [data, setData] = createSignal([] as coding_school[])\n\n  // onMount(async () => {\n  //   const raw_data = await getSchools();\n  //   const filter_array = raw_data.map(({ name, url, courses_offered, location }) => {\n  //     return ({\n  //       name,\n  //       url,\n  //       courses_offered,\n  //       location,\n  //     })\n  //   })\n  //   setData(filter_array)\n  //   console.log(filter_array)\n  //\n  // })\n\n  setData(defaultData);\n  const fuzzyFilter = (row, columnId, value, addMeta) => {\n    // Rank the item\n    const itemRank = rankItem(row.getValue(columnId), value);\n\n    // Store the ranking info\n    addMeta(itemRank);\n\n    // Return if the item should be filtered in/out\n    return itemRank.passed;\n  };\n  const fuzzySort = (rowA, rowB, columnId) => {\n    let dir = 0;\n\n    // Only sort by rank if the column has ranking information\n    if (rowA.columnFiltersMeta[columnId]) {\n      dir = compareItems(rowA.columnFiltersMeta[columnId], rowB.columnFiltersMeta[columnId]);\n    }\n\n    // Provide an alphanumeric fallback for when the item ranks are equal\n    return dir === 0 ? sortingFns.alphanumeric(rowA, rowB, columnId) : dir;\n  };\n  const table = createSolidTable({\n    get data() {\n      return data();\n    },\n    filterFns: {\n      fuzzy: fuzzyFilter\n    },\n    state: {\n      get sorting() {\n        return sorting();\n      },\n      get globalFilter() {\n        return globalFilter();\n      }\n    },\n    onSortingChange: setSorting,\n    columns: defaultColumns,\n    getFilteredRowModel: getFilteredRowModel(),\n    globalFilterFn: fuzzyFilter,\n    onColumnFiltersChange: setColumnFilters,\n    onGlobalFilterChange: setGlobalFilter,\n    getCoreRowModel: getCoreRowModel(),\n    getSortedRowModel: getSortedRowModel(),\n    getPaginationRowModel: getPaginationRowModel()\n  });\n  return _$ssr(_tmpl$2, _$ssrHydrationKey(), _$escape(_$createComponent(For, {\n    get each() {\n      return table.getHeaderGroups();\n    },\n    children: headerGroup => _$ssr(_tmpl$3, _$ssrHydrationKey(), _$escape(_$createComponent(For, {\n      get each() {\n        return headerGroup.headers;\n      },\n      children: header => _$ssr(_tmpl$5, _$ssrHydrationKey() + _$ssrAttribute(\"colspan\", _$escape(header.colSpan, true), false), _$escape(_$createComponent(Show, {\n        get when() {\n          return !header.isPlaceholder;\n        },\n        get children() {\n          return _$ssr(_tmpl$4, _$ssrHydrationKey() + _$ssrAttribute(\"class\", header.column.getCanSort() ? 'cursor-pointer select-none' : _$escape(undefined, true), false), _$escape(flexRender(header.column.columnDef.header, header.getContext())), _$escape({\n            asc: ' ðŸ”¼',\n            desc: ' ðŸ”½'\n          }[header.column.getIsSorted()]) ?? _$escape(null));\n        }\n      })))\n    })))\n  })), _$escape(_$createComponent(For, {\n    get each() {\n      return table.getRowModel().rows;\n    },\n    children: row => _$ssr(_tmpl$3, _$ssrHydrationKey(), _$escape(_$createComponent(For, {\n      get each() {\n        return row.getVisibleCells();\n      },\n      children: cell => _$ssr(_tmpl$6, _$ssrHydrationKey(), _$escape(flexRender(cell.column.columnDef.cell, cell.getContext())))\n    })))\n  })), _$ssrAttribute(\"disabled\", !table.getCanPreviousPage(), true), _$ssrAttribute(\"disabled\", !table.getCanNextPage(), true), _$escape(table.getState().pagination.pageIndex) + 1, _$escape(table.getPageCount()));\n}",
      "start": 1685413273992,
      "end": 1685413273992,
      "order": "normal"
    },
    {
      "name": "vite:import-analysis",
      "result": "import { ssrAttribute as _$ssrAttribute } from \"solid-js/web\";\nimport { createComponent as _$createComponent } from \"solid-js/web\";\nimport { ssr as _$ssr } from \"solid-js/web\";\nimport { escape as _$escape } from \"solid-js/web\";\nimport { ssrHydrationKey as _$ssrHydrationKey } from \"solid-js/web\";\nconst _tmpl$ = [\"<span\", \" class=\\\"badge mx-1\\\">\", \"</span>\"],\n  _tmpl$2 = [\"<main\", \" class=\\\"prose text-center mx-auto text-gray-700 p-4\\\"><h1 class=\\\"max-6-xs text-6xl font-bold uppercase my-16\\\">Coding Schools In My City</h1><div class=\\\"form-control\\\"><label class=\\\"label\\\">Press <span class=\\\"kbd ml-1 mr-auto\\\">Enter</span></label><label class=\\\"input-group\\\"><span>Search</span><input type=\\\"text\\\" class=\\\"input input-bordered\\\"></label></div><table><thead>\", \"</thead><tbody>\", \"</tbody></table><div class=\\\"btn-group\\\"><button class=\\\"btn btn-primary\\\"\", \">&lt;</button><button class=\\\"btn btn-secondary\\\"\", \">></button></div><span><div>Page</div><strong><!--#-->\", \"<!--/--> of <!--#-->\", \"<!--/--></strong></span><form class=\\\"flex flex-col justify-center gap-3\\\"><h2> Fill up form below to add your school </h2><label class=\\\"input-group input-group-vertical \\\"><span>name</span><input type=\\\"text\\\" placeholder=\\\"My Coding School\\\" class=\\\"input input-bordered\\\"></label><label class=\\\"input-group input-group-vertical\\\"><span>url</span><input type=\\\"text\\\" placeholder=\\\"https://www.google.com\\\" class=\\\"input input-bordered\\\"></label><label class=\\\"input-group input-group-vertical\\\"><span>courses offered</span><input type=\\\"text\\\" placeholder=\\\"Java, Python, JavaScript\\\" class=\\\"input input-bordered\\\"></label><label class=\\\"input-group input-group-vertical\\\"><span>location</span><input type=\\\"text\\\" placeholder=\\\"Austin, TX\\\" class=\\\"input input-bordered\\\"></label><button class=\\\"btn\\\">Submit</button></form></main>\"],\n  _tmpl$3 = [\"<tr\", \">\", \"</tr>\"],\n  _tmpl$4 = [\"<div\", \"><!--#-->\", \"<!--/--><!--#-->\", \"<!--/--></div>\"],\n  _tmpl$5 = [\"<th\", \">\", \"</th>\"],\n  _tmpl$6 = [\"<td\", \">\", \"</td>\"];\nimport \"/node_modules/solid-start/index.tsx\";\nimport { createSignal, For, Show } from 'solid-js';\n// import { getSchools } from '../services/service'\nimport { flexRender, getCoreRowModel, createSolidTable, getSortedRowModel, getPaginationRowModel, getFilteredRowModel, sortingFns } from \"/node_modules/@tanstack/solid-table/build/lib/index.mjs\";\nimport { rankItem, compareItems } from '@tanstack/match-sorter-utils';\nconst defaultData = [{\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none coco\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}, {\n  name: 'joe',\n  url: 'google..com',\n  courses_offered: \"none\",\n  location: \"may\"\n}];\n\n//TODO: need to disable sorting for some columns\nconst defaultColumns = [{\n  accessorKey: 'name',\n  cell: info => info.getValue(),\n  header: () => 'Name'\n}, {\n  accessorKey: 'url',\n  header: () => 'Url'\n}, {\n  accessorKey: 'courses_offered',\n  header: () => 'Courses Offered',\n  cell: info => info.getValue().split(\" \").map(word => _$ssr(_tmpl$, _$ssrHydrationKey(), _$escape(word)))\n}, {\n  accessorKey: 'location',\n  header: () => 'Location'\n}];\nexport default function Home() {\n  const [data, setData] = createSignal([]);\n  const [sorting, setSorting] = createSignal([]);\n  const [columnFilters, setColumnFilters] = createSignal([]);\n  const [globalFilter, setGlobalFilter] = createSignal(\"\");\n  // const [data, setData] = createSignal([] as coding_school[])\n\n  // onMount(async () => {\n  //   const raw_data = await getSchools();\n  //   const filter_array = raw_data.map(({ name, url, courses_offered, location }) => {\n  //     return ({\n  //       name,\n  //       url,\n  //       courses_offered,\n  //       location,\n  //     })\n  //   })\n  //   setData(filter_array)\n  //   console.log(filter_array)\n  //\n  // })\n\n  setData(defaultData);\n  const fuzzyFilter = (row, columnId, value, addMeta) => {\n    // Rank the item\n    const itemRank = rankItem(row.getValue(columnId), value);\n\n    // Store the ranking info\n    addMeta(itemRank);\n\n    // Return if the item should be filtered in/out\n    return itemRank.passed;\n  };\n  const fuzzySort = (rowA, rowB, columnId) => {\n    let dir = 0;\n\n    // Only sort by rank if the column has ranking information\n    if (rowA.columnFiltersMeta[columnId]) {\n      dir = compareItems(rowA.columnFiltersMeta[columnId], rowB.columnFiltersMeta[columnId]);\n    }\n\n    // Provide an alphanumeric fallback for when the item ranks are equal\n    return dir === 0 ? sortingFns.alphanumeric(rowA, rowB, columnId) : dir;\n  };\n  const table = createSolidTable({\n    get data() {\n      return data();\n    },\n    filterFns: {\n      fuzzy: fuzzyFilter\n    },\n    state: {\n      get sorting() {\n        return sorting();\n      },\n      get globalFilter() {\n        return globalFilter();\n      }\n    },\n    onSortingChange: setSorting,\n    columns: defaultColumns,\n    getFilteredRowModel: getFilteredRowModel(),\n    globalFilterFn: fuzzyFilter,\n    onColumnFiltersChange: setColumnFilters,\n    onGlobalFilterChange: setGlobalFilter,\n    getCoreRowModel: getCoreRowModel(),\n    getSortedRowModel: getSortedRowModel(),\n    getPaginationRowModel: getPaginationRowModel()\n  });\n  return _$ssr(_tmpl$2, _$ssrHydrationKey(), _$escape(_$createComponent(For, {\n    get each() {\n      return table.getHeaderGroups();\n    },\n    children: headerGroup => _$ssr(_tmpl$3, _$ssrHydrationKey(), _$escape(_$createComponent(For, {\n      get each() {\n        return headerGroup.headers;\n      },\n      children: header => _$ssr(_tmpl$5, _$ssrHydrationKey() + _$ssrAttribute(\"colspan\", _$escape(header.colSpan, true), false), _$escape(_$createComponent(Show, {\n        get when() {\n          return !header.isPlaceholder;\n        },\n        get children() {\n          return _$ssr(_tmpl$4, _$ssrHydrationKey() + _$ssrAttribute(\"class\", header.column.getCanSort() ? 'cursor-pointer select-none' : _$escape(undefined, true), false), _$escape(flexRender(header.column.columnDef.header, header.getContext())), _$escape({\n            asc: ' ðŸ”¼',\n            desc: ' ðŸ”½'\n          }[header.column.getIsSorted()]) ?? _$escape(null));\n        }\n      })))\n    })))\n  })), _$escape(_$createComponent(For, {\n    get each() {\n      return table.getRowModel().rows;\n    },\n    children: row => _$ssr(_tmpl$3, _$ssrHydrationKey(), _$escape(_$createComponent(For, {\n      get each() {\n        return row.getVisibleCells();\n      },\n      children: cell => _$ssr(_tmpl$6, _$ssrHydrationKey(), _$escape(flexRender(cell.column.columnDef.cell, cell.getContext())))\n    })))\n  })), _$ssrAttribute(\"disabled\", !table.getCanPreviousPage(), true), _$ssrAttribute(\"disabled\", !table.getCanNextPage(), true), _$escape(table.getState().pagination.pageIndex) + 1, _$escape(table.getPageCount()));\n}",
      "start": 1685413273992,
      "end": 1685413273994,
      "order": "normal"
    }
  ]
}
